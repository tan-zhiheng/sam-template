AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-test

  Sample SAM Template for sam-test

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.10 # Supported Runtimes: https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html
    Timeout: 10
    MemorySize: 256
    Architectures:
      - arm64 # x86_64 | arm64

Resources:
  TestFunc:
    Type: AWS::Serverless::Function # More info: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/
      Handler: app.handler
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/lambda_test
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref API
  TestFuncLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${TestFunc}
      RetentionInDays: 7

  V2Func:
    Type: AWS::Serverless::Function # More info: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/
      Handler: appv2.handler
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/lambda_test
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /v2
            Method: get
            RestApiId: !Ref API
  V2FuncLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${V2Func}
      RetentionInDays: 7

  V2PostFunc:
    Type: AWS::Serverless::Function # More info: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/
      Handler: appv2.handler
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/lambda_test
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /v2
            Method: post
            RestApiId: !Ref API

  ApiGwAccountConfig:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: arn:aws:iam::965163745124:role/APIGWtoCloudWatchLogs

  API:
    Type: AWS::Serverless::Api
    Properties:
      Name: test-api # A name for the API Gateway RestApi resource
      OpenApiVersion: '3.0.1' # prevent auto create Stage
      DisableExecuteApiEndpoint: true # Specifies whether clients can invoke your API by using the default execute-api endpoint.
      EndpointConfiguration:
        Type: REGIONAL # EDGE | REGIONAL | PRIVATE
      Domain:
        DomainName: api-test.tecotec.co.jp
        CertificateArn: arn:aws:acm:ap-northeast-1:965163745124:certificate/4b3a1be2-26c0-4831-8e80-a338d4ffa74e
        SecurityPolicy: TLS_1_2
        EndpointConfiguration: REGIONAL # REGIONAL | EDGE
        Route53:
          HostedZoneId: Z018056610BK6GVXLL29V
        BasePath:
          - /
      Auth: # More info: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-api-apiauth.html
        ResourcePolicy:
          IpRangeWhitelist:
            - 159.28.65.135
      StageName: v1
      AlwaysDeploy: false # Always deploys the API, even when no changes to the API have been detected.
      AccessLogSetting:
        DestinationArn: !GetAtt APILogGroup.Arn
        Format: '{"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","resourcePath":"$context.resourcePath","status":$context.status,"responseLatency":$context.responseLatency}'
  APILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/apigateway/api-test.tecotec.co.jp
      RetentionInDays: 7
