AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals: # More info: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Runtime: python3.12 # Supported Runtimes: https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html
    Architectures:
      - arm64 # x86_64 | arm64

Parameters:
  Env:
    Type: String
    Default: dev
    Description: Parameter for getting the deployment environment
  SecurityGroupIds:
    Type: String
    Description: Security Group Ids. Divided by comma
  SubnetIds:
    Type: String
    Description: Subnet Ids. Divided by comma

Resources:
  Func0:
    Type: AWS::Serverless::Function # More info: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      FunctionName: !Sub ${Env}-function-name
      Description: schedule function
      AutoPublishAlias: !Ref Env
      AutoPublishAliasAllProperties: true
      CodeUri: ../ScheduleFunctions
      Handler: main.lambda_handler
      Role: arn:aws:iam::965163745124:role/LambdaExecutionRole
      Timeout: 60
      MemorySize: 128
      Events:
        ScheduleEvent:
          Type: ScheduleV2 # More info: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-schedulev2.html
          Properties:
            Name: !Sub trigger-lambda-${Env}-function-name
            OmitName: true
            Description: !Sub trigger lambda ${Env}-function-name
            ## at expression - at(yyyy-MM-ddTHH:mm:ss)
            ## rate expression - rate(value unit) unit could be <minute | minutes | hour | hours | day | days>  example: rate(1 minute)
            ## cron expression - cron(fields) fields consists of six fields separated by white spaces <minutes hours day_of_month month day_of_week year>
            ScheduleExpression: cron(0/10 * * * ? *)
            ScheduleExpressionTimezone: 'Asia/Tokyo'
            # The ARN of the IAM role that EventBridge Scheduler will use for the target when the schedule is invoked.
            RoleArn: arn:aws:iam::965163745124:role/SchedulerExecutionRoleForLambda
            RetryPolicy:
              MaximumRetryAttempts: 0 # 0 to disable
            State: DISABLED # DISABLED | ENABLED
      VpcConfig:
        SecurityGroupIds: !Split [',', !Ref SecurityGroupIds]
        SubnetIds: !Split [',', !Ref SubnetIds]
      # Environment: # optional
      #   Variables:
      #     ENV_VAR_1: !Ref ENV_VAR_1
      #     ENV_VAR_N: !Ref ENV_VAR_N
  Func0LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Func0}
      RetentionInDays: 30

Outputs:
  FuncArn:
    Value: !GetAtt Func0.Arn
