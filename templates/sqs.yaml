AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Env:
    Type: String
    Default: dev
    Description: Parameter for getting the deployment environment
  LambdaExecutionRole:
    Type: String
    Description: Service role arn for lambda functions.

Resources:
  SQS0:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Env}-testQ
      DelaySeconds: 0 # 0 ~ 900 (15 minutes)
      MaximumMessageSize: 262144 # default 256KB. 1,024 bytes (1 KiB) ~ 262,144 bytes (256 KiB)
      MessageRetentionPeriod: 345600 # default 4days. 60 seconds (1 minute) ~ 1,209,600 seconds (14 days)
      ReceiveMessageWaitTimeSeconds: 0 # 0~20
      VisibilityTimeout: 40 # default 30 seconds. 0 to 43,200 seconds (12 hours). Recommand visibility timeout = (batch window) + (function timeout) + 30s
      Tags:
        - Key: Environment
          Value: !Ref Env
  SQSAccessPolicy0:
    Type: AWS::SQS::QueueInlinePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Id: __default_policy_ID
        Statement:
          - Sid: __owner_statement
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'SQS:*'
            Resource: !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${Env}-testQ'
      Queue: !Ref SQS0

  Func0:
    Type: AWS::Serverless::Function # More info: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      FunctionName: !Sub ${Env}-test-sqs
      Description: test
      Runtime: python3.11
      CodeUri: ../functions/
      Handler: app.lambda_handler
      Role: !Ref LambdaExecutionRole
      Architectures:
        - arm64
      Timeout: 10
      MemorySize: 128
      Environment:
        Variables:
          key: value
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SQS0.Arn
            BatchSize: 1
            MaximumBatchingWindowInSeconds: 0
            ScalingConfig:
              MaximumConcurrency: 1
            Enabled: true
      Tags:
        Environment: !Ref Env
  Func0LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Func0}
      RetentionInDays: 7
      Tags:
        - Key: Environment
          Value: !Ref Env
